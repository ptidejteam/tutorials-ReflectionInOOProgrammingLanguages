Error: IndividualClassNumberOfInstances is already defined in C class14 April 2014 4:20:52 pmVM: Win32 - a SmalltalkImageImage: Squeak3.9 [latest update: #7067]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir D:\Software\Smalltalk Environments\Reflection in SmalltalkTrusted Dir D:\Software\Smalltalk Environments\Reflection in Smalltalk\YannUntrusted Dir C:\My Squeak\YannClassBuilder(Object)>>error:	Receiver: a ClassBuilder	Arguments and temporary variables: 		aString: 	'IndividualClassNumberOfInstances is already defined in C class'	Receiver's instance variables: 		environ: 	a SystemDictionary(lots of globals)		classMap: 	nil		instVarMap: 	an IdentityDictionary()		progress: 	nil		maxClassIndex: 	nil		currentClassIndex: 	nil[] in ClassBuilder>>validateInstvars:from:forSuper: 	Arguments and temporary variables: 		instVarArray: 	#('IndividualClassNumberOfInstances')		oldClass: 	D class		newSuper: 	C class		instVars: 	nil		usedNames: 	a Set('format' 'organization' 'name' 'instanceVariables' 'environmen...etc...		temp: 	C class		var: 	nil		iv: 	'IndividualClassNumberOfInstances'		cl: 	ProtoObjectArray(SequenceableCollection)>>do:	Receiver: #('IndividualClassNumberOfInstances')	Arguments and temporary variables: 		aBlock: 	[] in ClassBuilder>>validateInstvars:from:forSuper: 		index: 	1		t3: 	1	Receiver's instance variables: #('IndividualClassNumberOfInstances')ClassBuilder>>validateInstvars:from:forSuper:	Receiver: a ClassBuilder	Arguments and temporary variables: 		instVarArray: 	#('IndividualClassNumberOfInstances')		oldClass: 	D class		newSuper: 	C class		instVars: 	nil		usedNames: 	a Set('format' 'organization' 'name' 'instanceVariables' 'environmen...etc...		temp: 	C class		var: 	nil		iv: 	'IndividualClassNumberOfInstances'		cl: 	ProtoObject	Receiver's instance variables: 		environ: 	a SystemDictionary(lots of globals)		classMap: 	nil		instVarMap: 	an IdentityDictionary()		progress: 	nil		maxClassIndex: 	nil		currentClassIndex: 	nil--- The full stack ---ClassBuilder(Object)>>error:[] in ClassBuilder>>validateInstvars:from:forSuper: Array(SequenceableCollection)>>do:ClassBuilder>>validateInstvars:from:forSuper: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -ClassBuilder>>class:instanceVariableNames:unsafe:ClassBuilder>>class:instanceVariableNames:Metaclass>>instanceVariableNames:UndefinedObject>>DoItBlockClosure>>valueCompiler>>evaluate2:in:to:notifying:ifFail:logged:Compiler>>evaluate:in:to:notifying:ifFail:logged:Compiler class>>evaluate:for:notifying:logged:Compiler class>>evaluate:notifying:logged:Browser>>defineClass:notifying:Browser>>contents:notifying:PluggableTextMorph>>acceptTextInModelPluggableTextMorph>>acceptTextMorphForEditView>>acceptContentsTextMorphEditor>>accept[] in TextMorphEditor(ParagraphEditor)>>save: TextMorphEditor(Controller)>>terminateAndInitializeAround:TextMorphEditor(ParagraphEditor)>>save:TextMorphEditor(ParagraphEditor)>>dispatchOnCharacter:with:TextMorphEditor>>dispatchOnCharacter:with:TextMorphEditor(ParagraphEditor)>>readKeyboardTextMorphEditor>>readKeyboard[] in TextMorphForEditView(TextMorph)>>keyStroke: TextMorphForEditView(TextMorph)>>handleInteraction:fromEvent:TextMorphForEditView>>handleInteraction:fromEvent:TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView>>keyStroke:TextMorphForEditView(TextMorph)>>handleKeystroke:KeyboardEvent>>sentTo:TextMorphForEditView(Morph)>>handleEvent:TextMorphForEditView(Morph)>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear: [] in PasteUpMorph>>becomeActiveDuring: BlockContext>>on:do:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendKeyboardEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor: Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in Project class>>spawnNewProcess [] in BlockContext>>newProcess 